#addition "../id_manager.hsp"
#include "area_grid_system.hsp"
#ifndef grid_listbox
#module grid_listbox listbox_id_manager, area_number, px, py, sx, sy, item_y, current_scroll_index, bar_posx, bar_posy, bar_height, bar_width, scrollbar_x

#const DEFAULT_ITEM_Y_SIZE 30
#const DEFAULT_SCROLLBAR_X 10

#modinit int p1, local thimod_ID
    area_number = p1

    thisrect thismod, r, area_number

    item_y = DEFAULT_ITEM_Y_SIZE
    scrollbar_x = DEFAULT_SCROLLBAR_X

    current_scroll_index = 0

    newmod listbox_id_manager, id_manager

    mref thismod_ID, 2
    return thismod_ID

#modfunc add_item str s1
    ss = s1
    notesel ss

    repeat notemax
        noteget tmp, cnt
        nid = get_new_id(listbox_id_manager)
        ;listbox_item_set_str id, tmp
    loop

    noteunsel
    return

#modfunc add_item_data int p1, var d
    ;set_listbox_data p1, d
    return

#modfunc del_item_by_id int id
    release_id listbox_id_manager, id
    return

#modfunc del_item_by_str str s1
    foreach_id listbox_id_manager, nid
        if listbox_item_get_str(nid) == s1 {
            release_id listbox_id_manager, nid
            break
        }
    foreach_end
    return

#modfunc del_item_all
    foreach_id listbox_id_manager, nid
        release_id listbox_id_manager, nid
    foreach_end
    current_scroll_index = 0
    return

#modfunc set_scroll_index int p1
    item_num = get_using_count(listbox_id_manager)
    current_scroll_index = limit(p1, 0, limit(item_num - sy / item_y, 0))
    return

#modfunc move_scroll_index int p1
    set_scroll_index thismod, current_scroll_index + p1
    return

#modfunc scroll_top
    set_scroll_index thismod, 0
    return

#modfunc scroll_end
    thisrect thismod, r, area_number
    sy = r.3 - r.1
    item_num = get_using_count(listbox_id_manager)
    set_scroll_index thismod, item_num
    return

#modcfunc get_scroll_index
    return current_scroll_index

#modfunc set_listbox_item_Ysize int p1
    item_y = p1
    return

#modfunc set_listbox_scollbar_width int p1
    scrollbar_x = p1
    return

#modfunc my_listbox_draw
    色を設定 $F5F5DC

    thisrect thismod, rect, area_number
    px = rect
    py = rect.1
    sx = rect.2 - px
    sy = rect.3 - py
    max_visible_items = sy / item_y

    sy = max_visible_items * item_y

    boxf px, py, px + sx, py + sy

    font "", item_y

    item_num = get_using_count(listbox_id_manager)
    tmp = get_used_ids(listbox_id_manager, idlist)

    repeat item_num - current_scroll_index
        if cnt >= max_visible_items : break

        nid = idlist(current_scroll_index + cnt)

        ypos = py + item_y * cnt
        if get_selected_status(nid) {
            色を設定 $4A90E2
        } else {
            color 0, 100, 0
        }
        boxf px, ypos, px + sx - bar_width, ypos + item_y
        pos px + 5, ypos
        色を設定 $F5F5DC
        mes listbox_item_get_str(nid)
    loop

    if max_visible_items < item_num {
        bar_width = scrollbar_x
        bar_height = limit(sy / (item_num - max_visible_items + 1), 5)
        bar_posx = px + sx - bar_width
        bar_posy = py + (sy - bar_height) * current_scroll_index / (item_num - max_visible_items)

        color 255
        boxf bar_posx, bar_posy, bar_posx + bar_width, bar_posy + bar_height
    } else {
        bar_width = -1
    }
    return

#modfunc set_current_scroll_index_by_bar_position int y
    scroll_range = sy - bar_height
    if scroll_range <= 0 : return

    bar_relative_pos = limit(y - py, 0, scroll_range)
    index = bar_relative_pos * (get_using_count(listbox_id_manager) - sy / item_y) / scroll_range

    set_scroll_index thismod, index
    return

#modcfunc listbox_on_id int x, int y, local i
    if px > x || py > y || px + sx < x || py + sy < y : return -1
    if x >= px + sx - bar_width {
        if y >= bar_posy && y <= bar_posy + bar_height {
            return -2
        }
        return -3
    }

    item_num = get_using_count(listbox_id_manager)
    i = (y - py) / item_y + current_scroll_index
    if i >= item_num : return -4

    get_used_ids listbox_id_manager, idlist
    return idlist(i)
    
#modfunc check_item int id, int single_selectf
    if single_select {
        foreach_id listbox_id_manager, tid
            if get_selected_status(tid) {
                ;toggle_selected_status tid
            }
        foreach_end
    }
    ;toggle_selected_status id
    return

#modcfunc is_item_visible int id
    start_index = current_scroll_index
    end_index = current_scroll_index + (sy / item_y) - 1
    get_used_ids listbox_id_manager, idlist

    repeat get_using_count(listbox_id_manager)
        if idlist(cnt) == id {
            return (cnt >= start_index && cnt <= end_index)
        }
    loop
    return 0

#modfunc scroll_item_to_top int id
    get_used_ids listbox_id_manager, idlist

    repeat get_using_count(listbox_id_manager)
        if idlist(cnt) == id {
            set_scroll_index thismod, cnt
            return
        }
    loop
    return

#modfunc scroll_item_to_bottom int id
    get_used_ids listbox_id_manager, idlist

    repeat get_using_count(listbox_id_manager)
        if idlist(cnt) == id {
            set_scroll_index thismod, cnt - (sy / item_y) + 1
            return
        }
    loop
    return

#modcfunc get_name_item int id
    return listbox_item_get_str(id)

#modcfunc get_selected_items array a
    get_used_ids listbox_id_manager, idlist
    dim a
    repeat length(idlist)
        if get_selected_status(idlist(cnt)) {
            a(cnt) = idlist(cnt)
        }
    loop
    return length(a)

#modcfunc get_selected_status_ int id
    return get_selected_status(id)

#modcfunc get_item_num
    return get_using_count(listbox_id_manager)

#modcfunc get_listbox_item_data int id
    return int(get_listbox_data(id))

#include "rectmock.hsp"
#global
#endif


#if 1
	//大量オブジェクトテスト
	mock_flag@global = 1
	set_rect_mock 0, 100,100,300,200
	newmod a, grid_listbox, 0
	repeat 10000
	add_item a,"A\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK"
	loop

repeat
	manage_keyfps
	mw = mousew
	if mw > 0: move_scroll_index a, -1
	if mw < 0: move_scroll_index a, 1

	color 0,0,0
	boxf
	my_listbox_draw a

	
	s = ""
	repeat get_selected_items(a,result)
		s += "" + result.cnt + ","
	loop

	title""+listbox_on_id(a,mousex,mousey) +"--"+ s
	
	if _getkey(1) >= 1{

		if _getkey(1) == 1 && listbox_on_id(a,mousex,mousey) >= 0{
			check_item a,stat
		}
		

		if listbox_on_id(a,mousex,mousey) == -3{
			set_current_scroll_index_by_bar_position a,mousey
		}
	}

	redraw : redraw 2
loop

#endif