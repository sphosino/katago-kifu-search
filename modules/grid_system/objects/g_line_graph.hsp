;#define global MODULE_DEBUG
#module line_graph data,dn, position_x, position_y, size_x, size_y, start_x, start_y, end_x, end_y, x_ticks, y_ticks, area_number, current_position

#modinit int _area, local thismod_ID

    //エリア番号
    area_number = _area

	margin_left = -1  // マイナスの時は、エリアいっぱいに表示
	margin_top = -1
	margin_right = margin_left
	margin_bottom = margin_bottom

	start_x = 0    //０手目
	start_y = 0.0  //0%(白勝ち）

	end_x = -1   //最終手まで
	end_y = 100  //100%(黒勝ち)

	//目盛りの分割数を設定
	x_ticks = 15
	y_ticks = 10

    mref thismod_ID, 2
    return thismod_ID

#modfunc set_margin_line_graph int p1, int p2, int p3, int p4
	margin_left = p1
	margin_top = p2
	margin_right = p3
	margin_bottom = p4
	return

#modfunc set_end_xy int _x, int _y
	end_x = _x
	end_y = _y
	return

#modfunc set_current_position int p1
	current_position = p1
	return
#modcfunc get_current_position
	return current_position

#modfunc add_graph_data double a
	data(dn) = a
	dn++
	return

#modfunc clear_graph
	dim data
	dn = 0
	return

#modfunc line_graph_manager var 手数

	thisrect thismod, oya, area_number //oya に矩形情報取得
	
	rect   = oya.0 + margin_left   * (margin_left   != -1)
	rect.1 = oya.1 + margin_top    * (margin_top    != -1)
	rect.2 = oya.2 - margin_right  * (margin_rignt  != -1)
	rect.3 = oya.3 - margin_bottom * (margin_bottom != -1)

	//グラフ枠描画

	make_instant_draw_object "LINE",(rect+rect.2) / 2,(rect.1+rect.3) /2, rect.2-rect,rect.3-rect.1, "$76310,1"

	//マウス位置表示
	mx = limit(mousex, rect.0,rect.2)
	my = limit(mousey, rect.1,rect.3)
	if in_rect(rect){
		if _getkey(1) == 1{
			手数 = (mx - rect.0) * (end_x - start_x) / (rect.2 - rect)
		}
		make_instant_draw_object "LINE_FAST", mx,rect.1,mx, rect.3,"$FFFFFF"
		make_instant_draw_object "LINE_FAST", rect.0,my, rect.2, my,"$FFFFFF"
		make_instant_draw_object "STR",mx, rect.1 - 9,18,18, strf("%d,%d", (mx - rect.0) * end_x / (rect.2 - rect),$FFFFFF)
		make_instant_draw_object "STR",rect.2, my    ,18,18, strf("%d,%d", end_y - (my - rect.1) * end_y / (rect.3 - rect.1), $FFFFFF)

		if _getkey(2) = 1{
			//評価値グラフを、黒番と白番で分けるかの01トグル
			div_line ^ 1
		}
		
	}

	//y中心線表示
	make_instant_draw_object "LINE_FAST",rect, (rect.3 + rect.1)  / 2, rect.2, (rect.3 + rect.1) / 2,""

	//現在手数の線表示
	xx = rect + 手数  * (rect.2 - rect) / (end_x - start_x)
	make_instant_draw_object "LINE_FAST",xx,rect.1,xx,rect.3,""

	//目盛り表示
	repeat x_ticks
		make_instant_draw_object "STR", rect.0 + (rect.2 - rect) * cnt / x_ticks + 9,rect.3 + 9,18,18,strf("%d,%d",start_x + (end_x - start_x) * cnt / x_ticks,$FFFFFF)

	loop
	repeat y_ticks
		make_instant_draw_object "STR", rect.0 - 9,rect.1 + (rect.3 - rect.1) * cnt / y_ticks +9  ,18,18, strf("%d,%d", end_y - (start_y + (end_y - start_y) * cnt / y_ticks),$FFFFF)

	loop

;/*/
	//折れ線描画
	line_col = $B4FAA0
	colset = $CCCCCC,$FFFFFF
	thick = 2
	half = thick / 2
	
	repeat div_line + 1
		nowpos = rect, (rect.3 + rect.1) / 2

		
		if div_line{
			line_col = colset(cnt)
		}
		for i, 1 + cnt, limit(dn - 1, 0), 1 + div_line
			endpos = rect + i * (rect.2 - rect) / dn, rect.3 - (rect.3 - rect.1) * data(i) / 100
			repeat 1;thick
				offset = cnt - half
				make_instant_draw_object "LINE_FAST", nowpos, nowpos.1 + offset, endpos, endpos.1 + offset,strf("%d",line_col)
			loop
			nowpos = endpos, endpos.1 //次の開始点を設定
		next
	loop
;*/
	
	return
	
#defcfunc local in_rect array a
	return a(0) <= mousex && a(1) <= mousey && a(2) >= mousex && a(3) >= mousey
#include "rectmock.hsp"
#global


#ifdef MODULE_DEBUG //テストコード

mock_flag@global = 1

set_rect_mock 99, 100, 100, 500, 300

newmod a, line_graph, 99

set_end_xy a, 200

repeat 200
    angle = cnt * 2   ; カウンタを角度として使う
    noise = rnd(10)   ; ノイズ成分を加える
    value = 50 + sin(angle) * 40 + noise   ; 基本をsin波にしてノイズを足す
    add_graph_data a, value
loop
//メインループ
repeat
	redraw:redraw 2
	manage_keyfps ;FPS調整と、_getkey()サポート
	color:boxf:color 255,255,255
	line_graph_manager a,t
loop
#endif