#ifndef grid_stepper
#addition "../keyfps.hsp"
#module grid_stepper area_number, v, under_limit, top_limit, gap, backcolor


#modinit array value, int _area
	dup v, value
	area_number = _area
	under_limit = -99999
	top_limit = 99999
	gap = 1
	backcolor = $F5F5DC
	mref thismod_ID, 2
	return thismod_ID

#define global set_stepper_limit(%1, %2 = "", %3 = "", %4 = "") :\
a@stepper = %2: if vartype(a@stepper) != 2{ a@stepper = str(a@stepper)}\
b@stepper = %3: if vartype(b@stepper) != 2{ b@stepper = str(b@stepper)}\
c@stepper = %4: if vartype(c@stepper) != 2{ c@stepper = str(c@stepper)}\
_set_stepper_limit %1, a@stepper,b@stepper,c@stepper

#modfunc _set_stepper_limit  str s1, str s2, str s3
	if s1 != "": under_limit = int(s1)
	if s2 != "": top_limit = int(s2)
	if s3 != "": gap = int(s3)
	return

	
#modfunc draw_g_stepper

	thisrect thismod, rect, area_number
	
	色を設定 backcolor
	aboxf rect
	色を設定 $4A3728
	pos rect,rect.1: mes v

	color 180,180,180


	half_y = (rect.3 - rect.1) / 2
	uprect   = rect.2 - half_y, rect.1         , rect.2 , rect.3 - half_y
	downrect = rect.2 - half_y, rect.3 - half_y, rect.2 , rect.3



	色を設定 backcolor
	if in_rect(uprect){
		色を設定 色を加算する(backcolor, 50):logmes 色を加算する(backcolor,50)
		if getPhold_ms(1, 400 , 100){
			v += gap
			v = limit(v, under_limit, top_limit)
		}
	}
	aboxf uprect
	color 255,30,30
	aboxfl uprect, 1

	color 255,30,30
	aboxfl downrect, 1

	色を設定 backcolor
	if in_rect(downrect){
		色を設定 色を加算する(backcolor, 50)
		if getPhold_ms(1, 400 , 100){
			v -= gap
			v = limit(v, under_limit, top_limit)
		}
	}
	aboxf downrect
	color 255,30,30
	aboxfl downrect, 1
	
	return

#include "rectmock.hsp"


#defcfunc local in_rect array a
	return a(0) <= mousex && a(1) <= mousey && a(2) >= mousex && a(3) >= mousey
#global
#endif
#if 0
mock_flag@global = 1


set_rect_mock 90, 0,0,60,30
set_rect_mock 30, 60,60, 100,100

newmod c, grid_stepper, a, 90
newmod c, grid_stepper, v, 30

*main
	manage_keyfps
	foreach c
	draw_g_stepper c(cnt)
	loop
	redraw:redraw 2
	goto*main
#endif