#module grid_slider v, min, max, horizontal, x, y, tickness,長さ, dragging, area, r

#modinit var a, int _horizontal, int area_number, int _min, int _max, int 太さ, int つまみサイズ, int _x, int _y, local thismod_ID

    dup v, a

	//スライダーの方向
    horizontal = _horizontal
    //エリア番号
    area = area_number

    //値の変化範囲
    min = _min
    max = _max
    //バーのサイズ情報
    tickness = 太さ
    r = つまみサイズ
    
	set_position_g_slider thismod, _x, _y

	//エリア番号から親レクト取得
	get_rect area,oya

	長さ = -1
    mref thismod_ID, 2
    return thismod_ID

#modfunc set_position_g_slider int _x, int _y
	x = _x
	y = _y
	return

#modfunc set_size_g_slider int _sizex, int _sizey, int _sizer
	長さ = _sizex
	tickness = _sizey
	r = _sizer
	return


#modcfunc get_value_g_slider
	return v

#modfunc slider_manager

	get_rect area, oya

	len = 長さ
	if 長さ < 0{
		if horizontal{
			len = oya.2-oya.0
		}else{
			len = oya.3-oya.1
		}
	}

	if horizontal = 1{
		bar_rect = oya + x, oya.1 + y, limit(oya + x + len    ,, oya.2),  limit(oya.1 + y + tickness,,oya.3)
	}else{
		bar_rect = oya + x, oya.1 + y, limit(oya + x + tickness,, oya.2),  limit(oya.1 + y + len    ,,oya.3)
	}
	
	if g_getkey(1) == 1{
		if in_rect(bar_rect){
			dragging = 1
		}
	}

	if g_getkey(1) == -1{
		dragging = 0
	}

	//ドラッグで値を変更
	if dragging{
		if horizontal{
			v = min + limit((max - min) * (mousex - bar_rect.0 - r ) / (bar_rect.2 - bar_rect.0 - r), 0, max-min)
		}else{
			v = min + limit((max - min) * (mousey - bar_rect.1 - r ) / (bar_rect.3 - bar_rect.1 - r), 0, max-min)
		}
	}


	//値をもとにつまみ位置を計算
	if max != min{
		if horizontal{
			tumami(0) = limit(bar_rect.0 + r/2 + (bar_rect.2 - bar_rect.0 - r) * (v - min) / (max - min), bar_rect.0, bar_rect.2)
			tumami(1) = bar_rect.1 + bar_rect.3 >> 1
		}else{
			tumami(0) = bar_rect + bar_rect.2 >> 1
			tumami(1) = limit(bar_rect.1 + r/2 + (bar_rect.3 - bar_rect.1 - r) * (v - min) / (max - min), bar_rect.1, bar_rect.3)
		}
	}


	;color $4A,$37,$28
	;rboxf bar_rect,bar_rect.1,bar_rect.2,bar_rect.3

	make_instant_draw_object "RBOXF_FAST",(bar_rect + bar_rect.2) / 2, (bar_rect.1+bar_rect.3)/2, bar_rect.2-bar_rect, bar_rect.3-bar_rect.1,"4A3728"
	
	;color $5E,$8B,$7E
	
	;circle tumami - r/2, tumami.1 -r/2, tumami + r/2, tumami.1 + r/2

	make_instant_draw_object "CIRCLE_FAST",tumami, tumami.1 ,  r, r, "$5E8b7E"
	
	return
	
#defcfunc local in_rect array a
	return a(0) <= mousex && a(1) <= mousey && a(2) >= mousex && a(3) >= mousey

#global