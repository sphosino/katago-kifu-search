#include "id_manager.hsp"

#module list_id_manager id_to_listnum, listnum_to_id, listnum, id_list_manager
#modinit 
	dim id_to_listnum , 200
	dim listnum_to_id, 200
	listnum = 0
	newmod id_list_manager, id_manager
	return
	
#modcfunc get_new_id_for_list
	id = get_new_id(id_list_manager)
	id_to_listnum(id) = listnum
	listnum_to_id(listnum) = id
	listnum++
	return id
	
#modfunc delete_by_listnum int p1
	if is_id_alive(id_list_manager, listnum_to_id(p1)){
		release_id id_list_manager, listnum_to_id(p1)
		foreach_id id_list_manager,id //全ての有効なアイテムに対してループ
			if id_to_listnum(id) > p1{ //位置がp1以上のアイテムに対して
				id_to_listnum(id)--　//位置を前に詰める
				listnum_to_id(id_to_listnum(id)) = id //詰めた位置のidを更新
			}
		foreach_end
		listnum--
	}
	return
	
#modfunc delete_by_itemid int p1
	delete_by_listnum thismod, id_to_listnum(p1)
	return

#modcfunc get_list_ids array a
	repeat listnum
		a(cnt) = listnum_to_id(cnt)
	loop
    return listnum

#modcfunc get_list_ids_range var a, int start_index, int end_index, int max_list_num
    // 引数の検証
    if start_index > end_index : return 0
    start_idx = limit(start_index, 0, max_list_num - 1)
    end_idx = limit(end_index, 0, max_list_num - 1)
    
    n = 0
    repeat end_idx - start_idx + 1, start_idx
        a(n) = listnum_to_id(cnt)
        n++
    loop
    return n
    
#modcfunc get_list_id int p1
	return listnum_to_id(p1)
	
#modcfunc get_list_position int p1
	return id_to_listnum(p1)

#global