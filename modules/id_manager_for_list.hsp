#ifndef list_id_manager
#include "id_manager.hsp"
#module list_id_manager id_to_listnum, listnum_to_id, listnum, id_list_manager, len

#const DEFAULT_SIZE 200
#const EXP_RATE 2.0
#define ctype ceil(%1) ((%1 != int(%1)) + %1)

#modinit int p1
	if p1 == 0{
		//id_manager側で確保した初期サイズに合わせる。
		newmod id_list_manager, id_manager
		dim id_to_listnum, get_id_length(id_list_manager) //確保したサイズを取得して設定
		dim listnum_to_id, get_id_length(id_list_manager)
	}else: if p1 < 0 {
		//マイナスならlist_id_managerの初期値
		newmod id_list_manager, id_manager, DEFAULT_SIZE
		dim id_to_listnum, DEFAULT_SIZE
		dim listnum_to_id, DEFAULT_SIZE
	}else{
		//指定値で確保
		newmod id_list_manager, id_manager, p1
		dim id_to_listnum, p1
		dim listnum_to_id, p1
	}
	len = get_id_length(id_list_manager)
	return
	
#modcfunc get_new_id_for_list
	id = get_new_id(id_list_manager)
	
	if id >= len || listnum >= len{
		new_len = ceil(EXP_RATE * len)
		id_to_listnum(new_len - 1) = 0
		listnum_to_id(new_len - 1) = 0
		len = new_len
	}
    
	id_to_listnum(id) = listnum
	listnum_to_id(listnum) = id
	listnum++
	return id
	
#modfunc delete_by_listnum int p1
	if p1 < 0 || p1 >= listnum : return
	id = listnum_to_id(p1)
	if is_id_alive(id_list_manager, id) {
		release_id id_list_manager, id
		repeat listnum - p1 - 1, p1
			listnum_to_id(cnt) = listnum_to_id(cnt + 1)
			id_to_listnum(listnum_to_id(cnt)) = cnt
		loop
		listnum--
	}
	return

#modfunc clear_list_id_manager
	clear_id_manager id_list_manager
	listnum = 0
	return
	
#modfunc delete_by_itemid int p1
	delete_by_listnum thismod, id_to_listnum(p1)
	return

#modcfunc get_list_ids array a
	a(listnum - (listnum != 0)) = 0
	memcpy a, listnum_to_id, listnum << 2
    return listnum
    
#modcfunc get_list_count
	return listnum

#modcfunc get_list_id_length
	return len
    
#modcfunc get_list_ids_range array a, int start_index, int end_index
	if start_index > end_index : return 0
	start_idx = limit(start_index, 0, list_num - 1)
	end_idx = limit(end_index, 0, list_num - 1)
	n = end_idx - start_idx + 1
	a(listnum - (listnum != 0)) = 0
	memcpy a, listnum_to_id + start_idx, n << 2
	return n
    
#modcfunc get_list_id int p1
	if p1 < 0 || p1 >= listnum : return -1
	return listnum_to_id(p1)
	
#modcfunc get_list_position int p1
	if is_id_alive(id_list_manager, p1) : return id_to_listnum(p1)
	return -1
#global
#endif